# Generated by Django 3.0.10 on 2020-09-20 15:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, error_messages={'required': 'Enter your name'}, help_text=None, max_length=30, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^[-a-zA-ZА-Яа-я]+\\Z', message='Enter your name')], verbose_name="Ім'я")),
                ('last_name', models.CharField(blank=True, error_messages={'required': 'Enter your last name'}, help_text=None, max_length=30, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.RegexValidator('^[-a-zA-ZА-Яа-я]+\\Z', message='Enter your last name')], verbose_name='Прізвище')),
                ('image', models.ImageField(blank=True, upload_to='image/', verbose_name='Фото')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email адреса')),
                ('email_confirm', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Адреса')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Індекс')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Місто/село')),
                ('shipping', models.CharField(blank=True, choices=[('Ukrposhta', 'Укрпошта'), ('NovaPoshta', 'Нова пошта')], max_length=20, null=True)),
                ('department', models.PositiveIntegerField(blank=True, null=True, verbose_name='відділення Нової пошти №')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
